openapi: 3.0.2
info:
  title: VEHICLE API
  description: VEHICLE API
  version: '1'
paths:
  /auth/login:
    post:
      tags:
        - Auth
      description: This route allow you to login into the api
      summary: login API
      operationId: userLogin
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/register:
    post:
      tags:
        - Auth
      description: "This route allow you to sign up into the api\r\n only userName email password passwordConfirmation are required"
      summary: User register API
      operationId: registerUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/logout:
    post:
      tags:
        - Auth
      description: This route allow you to logout from the api
      summary: User logout API
      operationId: userLogout
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/tokens:
    post:
      tags:
        - Auth
      description: >-
        This route allow the user with a refresh token to regenerate tokens when
        the access token expires
      summary: User token API
      operationId: userToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/forgot-password:
    post:
      tags:
        - Auth
      description: >-
        This route allow you to send email with the reset password link to reset
        the password you forgot
      summary: User password forgot API
      operationId: passwordForgot
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passForgotRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/reset-password:
    post:
      tags:
        - Auth
      description: Reset you password using the reset token.
      summary: User password reset API
      operationId: passwordReset
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passResetRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /auth/change-password:
    patch:
      tags:
        - Auth
      description: This route allow you to user to change his password
      summary: User password change API
      operationId: passwordChange
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/passChangeRequestBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/all-users:
    get:
      tags:
        - User
      description: This route allow you to get all users data
      summary: get all users data API
      operationId: getUsers
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/userId:
    get:
      tags:
        - User
      description: This route allow you to get single user data
      summary: get single data API
      operationId: getUserApi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - User
      description: Delete User's Data
      summary: Delete LoggedIn API
      operationId: deleteUser
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteViewModel'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /user:
    post:
      tags:
        - User
      description: This route allow only admin to add new user
      summary: Add new user API
      operationId: addUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/update-profile-image:
    patch:
      tags:
        - User
      description: Update user profile image
      summary: update profile image API
      operationId: updateProfileUser
      parameters:
        - name: image
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfileImageResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/update-details:
    patch:
      tags:
        - User
      description: This route allow logged in user to update his own profile details
      summary: update his own profile API
      operationId: putUserUpdateProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPutRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /user/me:
    delete:
      tags:
        - User
      description: Delete LoggedIn User's Data
      summary: Delete LoggedIn API
      operationId: UserSelfDelete
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
        - name: profileImageId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteViewModel'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /product:
    get:
      tags:
        - Product
      description: This route allow you to get all products data
      summary: get all products data API
      operationId: getProducts
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Product
      description: This route allow only admin to add new product
      summary: Add new product API
      operationId: addProduct
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /product/id:
    get:
      tags:
        - Product
      description: This route allow you to get single product data
      summary: get single data API
      operationId: getProduct
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Product
      description: This route allow logged in seller/admin to delete product using it's ID
      summary: Delete product by id API
      operationId: deleteProduct
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeleteViewModel'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /product/main-image:
    patch:
      tags:
        - Product
      description: >-
        This route allow only seller or admin to update product images [ images
        ]
      summary: update product images API
      operationId: updateImagesProduct
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImagesRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateImagesResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /product/details:
    patch:
      tags:
        - Product
      description: This route allow only admin or seller to update product details
      summary: update product details API
      operationId: putProductUpdateProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPutRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /order:
    get:
      tags:
        - Order
      description: This route allow logged in user/seller/admin get his orders
      summary: get all orders data API
      operationId: getOrders
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Order
      description: This route allow logged in user/seller/admin create new order
      summary: Add new order API
      operationId: addOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrderResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /order/orderId:
    get:
      tags:
        - Order
      description: This route allow you to get single order data
      summary: get single data API
      operationId: getOrderApi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrderResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Order
      description: Delete Order's Data
      summary: Delete LoggedIn API
      operationId: deleteOrder
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDeleteViewModel'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /order/orderstatus:
    patch:
      tags:
        - Order
      description: This route allow logged in seller update order status
      summary: update Oder status API
      operationId: patchOrderUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusPutRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /order/update-details:
    put:
      tags:
        - Order
      description: This route allow logged in admin to update order details
      summary: update order API
      operationId: putOrderUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPutRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /category:
    get:
      tags:
        - Category
      description: This route allow to get all categories
      summary: get all categories data API
      operationId: getCategories
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Category
      description: This route allow only admin to add new category
      summary: Add new category API
      operationId: addCategory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCategoryBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /category/categoryId:
    get:
      tags:
        - Category
      description: This route allow to get category using it's ID
      summary: get categories by id  API
      operationId: getCategory
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
        - Category
      description: >-
        This route allow only admin to update category details [name /
        description]
      summary: update category by id  API
      operationId: putCategory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Category
      description: This route allow only admin to delete the category
      summary: Delete category API
      operationId: deleteCategory
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDeleteResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /categoryId/image:
    patch:
      tags:
        - Category
      description: This route allow only admin to update category image [image]
      summary: update category image by id  API
      operationId: putCategoryImage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryImageBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryImageUdateResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle:
    get:
      tags:
        - Vehicle
      description: This route allow you to get all vehicles data
      summary: get all vehicles data API
      operationId: getVehicles
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Vehicle
      description: This route allow only admin to add new vehicle
      summary: Add new vehicle API
      operationId: addVehicle
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVehicleRequest'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/search:
    get:
      tags:
        - Vehicle
      description: This route allow you to search vehicles data
      summary: search vehicles data API
      operationId: searchtVehicles
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/list:
    get:
      tags:
        - Vehicle
      description: This route allow you to get list of vehicles data
      summary: get list of vehicles data API
      operationId: getVehicleList
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/vehicleId:
    get:
      tags:
        - Vehicle
      description: This route allow you to get single vehicle data
      summary: get single data API
      operationId: getVehicleApi
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Vehicle
      description: Delete Vehicle's Data
      summary: Delete LoggedIn API
      operationId: deleteVehicle
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleDeleteViewModel'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /vehicle/status:
    post:
      tags:
        - Vehicle
      description: This route allow you to update vehicle status
      summary: update vehicle status API
      operationId: updateVehicleStatusApi
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleStatusParams'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/makers:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles makers data
      summary: vehicles makers data API
      operationId: getMakers
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/models:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles models data
      summary: vehicles model data API
      operationId: getModels
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/years:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles years data
      summary: vehicles years data API
      operationId: getYears
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: number
                      format: float
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/engine-types:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles Engine Types data
      summary: vehicles Engine Types data API
      operationId: getEngineTypes
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/body-types:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles BodyTypes data
      summary: vehicles Body Types data API
      operationId: getBodyTypes
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/models-by-maker:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles Models for a Make data
      summary: vehicles Models Make data API
      operationId: getModelsMake
      parameters:
        - name: maker
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/models-by-year:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles Models by year data
      summary: vehicles Models year data API
      operationId: getModelsByYear
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: number
            format: float
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/models-by-year-maker:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles Models by year and make data
      summary: vehicles Models year and make data API
      operationId: getModelsByYearMaker
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: maker
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/makers-by-model:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles Maker by model data
      summary: vehicles Maker by model data API
      operationId: getMakeModels
      parameters:
        - name: model
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: string
                required:
                  - results
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/by-year-maker-model:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles data by  year make and model
      summary: vehicles data by year make and model API
      operationId: getByYearMakerModel
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: maker
          in: query
          required: true
          schema:
            type: string
        - name: model
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/filter:
    get:
      tags:
        - Vehicle
      description: This route allow you to get vehicles data by option
      summary: vehicles data by optional   API
      operationId: filterVehicle
      parameters:
        - name: year
          in: query
          required: false
          schema:
            type: string
        - name: price
          in: query
          required: false
          schema:
            type: string
        - name: mileage
          in: query
          required: false
          schema:
            type: string
        - name: maker
          in: query
          required: false
          schema:
            type: string
        - name: model
          in: query
          required: false
          schema:
            type: string
        - name: bodyType
          in: query
          required: false
          schema:
            type: string
        - name: engineType
          in: query
          required: false
          schema:
            type: string
        - name: transmission
          in: query
          required: false
          schema:
            type: string
        - name: condition
          in: query
          required: false
          schema:
            type: string
        - name: location
          in: query
          required: false
          schema:
            type: string
        - name: refNo
          in: query
          required: false
          schema:
            type: string
        - name: fuel
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: color
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /vehicle/range:
    post:
      tags:
        - Vehicle
      description: >-
        This route allow you to get vehicles data by years, prices or mileage
        rabge
      summary: vehicles data by range API
      operationId: VehicleRange
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleByRange'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /cart:
    get:
      tags:
        - Cart
      description: This route allow logged in user/seller/admin to get his cart
      summary: get cart API
      operationId: getCarts
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartsGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Cart
      description: This route allow logged in user/seller/admin to add items to his cart
      summary: add items to his cart API
      operationId: addCart
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCartBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Cart
      description: This route allow logged in user/seller/admin to delete cart
      summary: delete product from cart API
      operationId: deleteCart
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDeleteResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /cart/increase-one:
    patch:
      tags:
        - Cart
      description: >-
        This route allow logged in user/seller/admin to increase product
        quantity by one
      summary: increase product quantity by one  API
      operationId: putCart
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /cartId/reduce-one:
    patch:
      tags:
        - Cart
      description: >-
        This route allow logged in user/seller/admin to reduce product quantity
        by one
      summary: reduce product quantity by one API
      operationId: putCartImage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartBody'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartPutResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /cart/productId:
    delete:
      tags:
        - Cart
      description: This route allow logged in user/seller/admin to delete product from cart
      summary: delete product from cart API
      operationId: deleteProductCart
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDeleteResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /discount:
    get:
      tags:
        - Discount
      description: This route allow admin to get all discount codes
      summary: get all discount codes API
      operationId: getDiscounts
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountsGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /discount/find:
    get:
      tags:
        - Discount
      description: This route allow to get discount using it's ID
      summary: get categories by id  API
      operationId: getDiscount
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /discount/verify:
    post:
      tags:
        - Discount
      description: This route allow logged in user/seller to verify discount code
      summary: to verify discount code API
      operationId: verifyDiscount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                discountCode:
                  type: string
              required:
                - discountCode
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /discount/generate:
    post:
      tags:
        - Discount
      description: This route allow admin to generate new discount code
      summary: generate new discount code API
      operationId: generateDiscount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateNewDiscount'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountPostResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /discount/cancel:
    delete:
      tags:
        - Discount
      description: This route allow logged in user to cancel discount code
      summary: cancel discount code API
      operationId: cancelDiscount
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountCancelResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /discount/discountId:
    delete:
      tags:
        - Discount
      description: This route allow logged in user to cancel discount code
      summary: cancel discount code API
      operationId: deleteDiscount
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: _id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscountDeleteResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /favorite:
    get:
      tags:
        - Favorite
      description: >-
        This route allow logged in user/seller/admin to get his favorite
        products list
      summary: get favorite products list API
      operationId: getFavoriteApi
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoriteResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Favorite
      description: >-
        This route allow logged in user/seller/admin to add product to his
        favorite list
      summary: add product to favorite list API
      operationId: addFavorite
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
              required:
                - productId
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /favorite/check/productId:
    get:
      tags:
        - Favorite
      description: >-
        This route allow logged in user/seller/admin to check if product in
        favorite list
      summary: check if product in favorite list API
      operationId: checkFavoriteApi
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /favorite/productId:
    delete:
      tags:
        - Favorite
      description: >-
        This route allow logged in user/seller/admin to delete product from
        favorite list
      summary: delete product from favorite list API
      operationId: FavoriteDelete
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
  /review:
    get:
      tags:
        - Review
      description: This route allow logged in user/seller/admin get his reviews
      summary: get all reviews data API
      operationId: getReviews
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: productId
          in: query
          required: true
          schema:
            type: string
        - name: count
          in: query
          description: count
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: offset
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: limit
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: >-
            When number of user is greater than 10 in data, it divides into
            pages each page contain 10 in data.

            Example : 2
          required: false
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            filter
            This will filter all fields about this word
            Example : name, description, language
          required: false
          schema:
            type: string
        - name: select
          in: query
          description: |-
            Select only fields you want.  
            Example : make, mileage, model
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Review
      description: >-
        This route allow logged in user/seller/admin to make a review on a
        product
      summary: make a review on a product API
      operationId: addReview
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  type: string
                rating:
                  type: number
                  format: float
              required:
                - review
                - rating
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /review/productId/reviews/reviewId:
    get:
      tags:
        - Review
      description: This route allow you to get specific review using it's ID
      summary: get specific review API
      operationId: getReviewApi
      parameters:
        - name: accept-language
          in: query
          description: |-
            Accept-Language
            Example : en_US, jp_JP
          required: false
          schema:
            type: string
        - name: productId
          in: query
          required: true
          schema:
            type: string
        - name: reviewId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    patch:
      tags:
        - Review
      description: >-
        This route allow logged in user/seller/admin to update review using it's
        ID
      summary: update review API
      operationId: patchReviewUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OneReviewParams'
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response400'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /review/reviewId:
    delete:
      tags:
        - Review
      description: >-
        This route allow logged in user/seller/admin to delete review using it's
        ID
      summary: delete review API
      operationId: deleteReview
      parameters:
        - name: productId
          in: query
          required: true
          schema:
            type: string
        - name: reviewId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonGetResponse'
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response404'
        '500':
          description: 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/response500'
components:
  schemas:
    LoginRequestBody:
      type: object
      properties:
        identifier:
          type: string
        password:
          type: string
      required:
        - identifier
        - password
    commonPostResponse:
      type: object
      properties:
        type:
          type: string
          description: Success
        message:
          type: string
          description: error message
      required:
        - type
        - message
    UserRole:
      type: string
      enum:
        - user
        - admin
        - seller
    UserStatus:
      type: string
      enum:
        - active
        - blocked
        - inactive
        - deleted
    Address:
      type: object
      properties:
        street:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postcode:
          type: string
        addressType:
          type: string
        country:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - street
    AuthResult:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        passwordChangedAt:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - _id
        - firstName
        - lastName
        - userName
        - email
        - password
        - passwordConfirmation
        - role
        - status
        - isEmailVerified
        - passwordChangedAt
        - profileImage
        - profileImageId
        - createdAt
        - updatedAt
        - deletedAt
    Tokens:
      type: object
      properties:
        accessToken:
          type: string
        refleshToken:
          type: string
      required:
        - accessToken
        - refleshToken
    Response:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/AuthResult'
        tokens:
          $ref: '#/components/schemas/Tokens'
      required:
        - user
        - tokens
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/Response'
    response400:
      type: object
      properties:
        type:
          type: string
          description: Error
        statusCode:
          type: number
          format: float
          example: 0
          description: error code
        error:
          type: string
          description: error details
        message:
          type: string
          description: error message
        data:
          type: string
          nullable: true
          description: error data
      required:
        - type
        - statusCode
        - error
        - message
        - data
    response404:
      type: object
      properties:
        type:
          type: string
          description: Error
        statusCode:
          type: number
          format: float
          example: 0
          description: error code
        error:
          type: string
          description: error details
        message:
          type: string
          description: error message
        data:
          type: string
          nullable: true
          description: error data
      required:
        - type
        - statusCode
        - error
        - message
        - data
    response500:
      type: object
      properties:
        type:
          type: string
          description: Error
        statusCode:
          type: number
          format: float
          example: 0
          description: error code
        error:
          type: string
          description: error details
        message:
          type: string
          description: error message
        data:
          type: string
          nullable: true
          description: error data
      required:
        - type
        - statusCode
        - error
        - message
        - data
    errorResponse:
      type: object
      properties:
        type:
          type: string
          description: Error
        statusCode:
          type: number
          format: float
          example: 0
          description: error code
        error:
          type: string
          description: error details
        message:
          type: string
          description: error message
        data:
          type: string
          nullable: true
          description: error data
      required:
        - type
        - statusCode
        - error
        - message
        - data
    RegisterData:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
      required:
        - userName
        - email
        - password
        - passwordConfirmation
    RegisterRequestBody:
      $ref: '#/components/schemas/RegisterData'
    RegisterResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/Response'
    LogoutRequestBody:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    Token:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    TokenRequestBody:
      $ref: '#/components/schemas/Token'
    TokenPostResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - type: object
          properties:
            tokens:
              $ref: '#/components/schemas/Tokens'
          required:
            - tokens
    UserMail:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken
    passForgotRequestBody:
      $ref: '#/components/schemas/UserMail'
    UserResetPassword:
      type: object
      properties:
        password:
          type: string
        passwordConfirmation:
          type: string
      required:
        - password
        - passwordConfirmation
    passResetRequestBody:
      $ref: '#/components/schemas/UserResetPassword'
    UserChangePassword:
      type: object
      properties:
        currentPassword:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
      required:
        - currentPassword
        - password
        - passwordConfirmation
    passChangeRequestBody:
      $ref: '#/components/schemas/UserChangePassword'
    commonGetResponse:
      type: object
      properties:
        type:
          type: string
          description: Success or Error
        statusCode:
          type: number
          format: float
          description: status Code
        message:
          type: string
          description: response message
      required:
        - type
        - statusCode
        - message
    UserData:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        passwordChangedAt:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - _id
        - firstName
        - lastName
        - userName
        - email
        - password
        - passwordConfirmation
        - role
        - status
        - isEmailVerified
        - passwordChangedAt
        - profileImage
        - profileImageId
        - createdAt
        - updatedAt
        - deletedAt
    userResponseData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserData'
      required:
        - results
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/userResponseData'
    AddUserResult:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        passwordChangedAt:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - _id
        - firstName
        - lastName
        - userName
        - email
        - password
        - passwordConfirmation
        - role
        - status
        - isEmailVerified
        - passwordChangedAt
        - profileImage
        - profileImageId
        - createdAt
        - updatedAt
        - deletedAt
    addUserResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/AddUserResult'
      required:
        - results
    AddUserResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/addUserResponseData'
    UserModel:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
      required:
        - userName
        - email
        - password
        - passwordConfirmation
        - role
        - status
    AddUserRequest:
      $ref: '#/components/schemas/UserModel'
    ImageUrl:
      type: object
      properties:
        image:
          type: string
      required:
        - image
    UpdateProfileImageResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/ImageUrl'
    UserPutRequest:
      type: object
      properties:
        favoriteProducts:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        passwordChangedAt:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - favoriteProducts
        - email
        - password
        - passwordConfirmation
        - role
        - status
        - isEmailVerified
        - passwordChangedAt
        - profileImage
        - profileImageId
        - updatedAt
        - deletedAt
    PutUserResult:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        status:
          $ref: '#/components/schemas/UserStatus'
        isEmailVerified:
          type: boolean
        passwordChangedAt:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        companyName:
          type: string
        phone:
          type: string
        profileImage:
          type: string
        profileImageId:
          type: string
        discountCode:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - _id
        - firstName
        - lastName
        - userName
        - email
        - password
        - passwordConfirmation
        - role
        - status
        - isEmailVerified
        - passwordChangedAt
        - profileImage
        - profileImageId
        - createdAt
        - updatedAt
        - deletedAt
    putUserResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/PutUserResult'
      required:
        - results
    UserPutResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/putUserResponseData'
    UserDeleteViewModel:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/UserModel'
    ProductData:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - _id
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    productResponseData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductData'
      required:
        - results
    ProductResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/productResponseData'
    AddProductResult:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - _id
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    addProductResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/AddProductResult'
      required:
        - results
    AddProductResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/addProductResponseData'
    ProductModel:
      type: object
      properties:
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    AddProductRequest:
      $ref: '#/components/schemas/ProductModel'
    ProductImageUrl:
      type: object
      properties:
        image:
          type: string
      required:
        - image
    UpdateMainImageRequest:
      $ref: '#/components/schemas/ProductImageUrl'
    UpdateMainImageResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/ProductImageUrl'
    UpdateImagesRequest:
      $ref: '#/components/schemas/ProductImageUrl'
    ImagesUrl:
      type: object
      properties:
        image:
          type: string
          description: multiple images separated by commas
      required:
        - image
    UpdateImagesResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/ImagesUrl'
    ProductPutRequest:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - _id
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    PutProductResult:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - _id
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    putProductResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/PutProductResult'
      required:
        - results
    ProductPutResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/putProductResponseData'
    ProductDeleteViewModel:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/ProductModel'
    OrderProductData:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: boolean
        sku:
          type: string
        idRef:
          type: string
        make:
          type: string
        model:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        doors:
          type: string
        location:
          type: string
        bodyType:
          type: string
        fuel:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        mileage:
          type: number
          format: float
        vehicleWeight:
          type: string
        steering:
          type: string
        condition:
          type: string
        badges:
          type: string
        reviews:
          type: number
          format: float
        availability:
          type: string
        brand:
          type: string
        categories:
          type: string
        attributes:
          type: string
        compatibility:
          type: number
          format: float
        images:
          type: string
        description:
          type: string
        category:
          type: string
        seller:
          type: string
        compareAtPrice:
          type: number
          format: float
        price:
          type: number
          format: float
        priceDiscount:
          type: number
          format: float
        colors:
          type: string
        sizes:
          type: string
        sold:
          type: number
          format: float
        priceAfterDiscount:
          type: number
          format: float
        isOutOfStock:
          type: boolean
        rating:
          type: number
          format: float
      required:
        - _id
        - name
        - slug
        - sku
        - idRef
        - make
        - model
        - width
        - height
        - length
        - doors
        - location
        - bodyType
        - fuel
        - engineType
        - transmission
        - mileage
        - vehicleWeight
        - steering
        - condition
        - badges
        - reviews
        - availability
        - brand
        - categories
        - attributes
        - compatibility
        - images
        - description
        - category
        - seller
        - compareAtPrice
        - price
        - priceDiscount
        - colors
        - sizes
        - sold
        - priceAfterDiscount
        - isOutOfStock
        - rating
    OrderStatus:
      type: string
      enum:
        - NotProcessed
        - Processing
        - Shipped
        - Delivered
        - Cancelled
    IOrder:
      type: object
      properties:
        _id:
          type: string
        orderNumber:
          type: number
          format: float
        user:
          $ref: '#/components/schemas/UserData'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProductData'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        totalPrice:
          type: number
          format: float
        isPaid:
          type: boolean
        isDelivered:
          type: boolean
        taxPrice:
          type: number
          format: float
        shippingPrice:
          type: number
          format: float
        status:
          $ref: '#/components/schemas/OrderStatus'
        paidAt:
          type: string
        deliveredAt:
          type: string
        paymentMethod:
          type: string
        paymentStripeId:
          type: string
        paymentPayaplId:
          type: string
        updatedAt:
          type: string
        createdAt:
          type: string
        phone:
          type: string
        email:
          type: string
        message:
          type: string
      required:
        - _id
        - orderNumber
        - user
        - products
        - shippingAddress
        - totalPrice
        - isPaid
        - isDelivered
        - taxPrice
        - shippingPrice
        - status
        - paidAt
        - paymentMethod
        - updatedAt
        - createdAt
        - phone
        - email
        - message
    orderResponseData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IOrder'
      required:
        - results
    OrderResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/orderResponseData'
    addOrderResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/IOrder'
      required:
        - results
    AddOrderResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/addOrderResponseData'
    OrderUserData:
      $ref: '#/components/schemas/UserData'
    OrderModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/OrderUserData'
        productId:
          type: string
        totalPrice:
          type: number
          format: float
        isPaid:
          type: boolean
        isDelivered:
          type: boolean
        taxPrice:
          type: number
          format: float
        shippingPrice:
          type: number
          format: float
        destinationPort:
          type: string
        originPort:
          type: string
        preExportInspectionFee:
          type: string
        marineInsuranceFee:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        paidAt:
          type: string
        paymentMethod:
          type: string
        paymentStripeId:
          type: string
        paymentPayaplId:
          type: string
        createdAt:
          type: string
        phone:
          type: string
        email:
          type: string
        message:
          type: string
        address:
          type: string
      required:
        - productId
        - totalPrice
        - isPaid
        - isDelivered
        - taxPrice
        - shippingPrice
        - status
        - createdAt
        - phone
        - email
        - message
        - address
    AddOrderRequest:
      $ref: '#/components/schemas/OrderModel'
    OneOrderParam:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    OrderStatusPutRequest:
      allOf:
        - $ref: '#/components/schemas/OneOrderParam'
        - type: object
          properties:
            status:
              $ref: '#/components/schemas/OrderStatus'
          required:
            - status
    putOrderResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/IOrder'
      required:
        - results
    OrderPutResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/putOrderResponseData'
    OrderPutRequest:
      type: object
      properties:
        orderNumber:
          type: number
          format: float
        user:
          $ref: '#/components/schemas/UserData'
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProductData'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        totalPrice:
          type: number
          format: float
        isPaid:
          type: boolean
        isDelivered:
          type: boolean
        taxPrice:
          type: number
          format: float
        shippingPrice:
          type: number
          format: float
        status:
          $ref: '#/components/schemas/OrderStatus'
        paidAt:
          type: string
        deliveredAt:
          type: string
        paymentMethod:
          type: string
        paymentStripeId:
          type: string
        paymentPayaplId:
          type: string
        createdAt:
          type: string
        phone:
          type: string
        email:
          type: string
        message:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
      required:
        - orderNumber
        - user
        - products
        - shippingAddress
        - totalPrice
        - isPaid
        - isDelivered
        - taxPrice
        - shippingPrice
        - status
        - paidAt
        - paymentMethod
        - createdAt
        - phone
        - email
        - message
        - updatedAt
        - deletedAt
    OrderDeleteViewModel:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/IOrder'
    Category:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        slug:
          type: string
        items:
          type: number
          format: float
        description:
          type: string
        image:
          type: string
        imageId:
          type: string
        layout:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - _id
        - name
        - slug
        - items
        - description
        - image
        - imageId
        - layout
        - createdAt
        - updatedAt
    CategoriesResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
        - results
    CategoriesGetResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/CategoriesResponse'
    CategoryBody:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        items:
          type: number
          format: float
        description:
          type: string
        image:
          type: string
        imageId:
          type: string
        layout:
          type: string
      required:
        - name
        - slug
        - items
        - description
        - image
        - imageId
        - layout
    AddCategoryBody:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategoryBody'
      required:
        - results
    CategoryPostResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/Category'
    CategoryResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/Category'
      required:
        - results
    CategoryGetResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/CategoryResponse'
    UpdateCategoryBody:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - description
    CategoryUdateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
        - results
    CategoryPutResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/CategoryUdateResponse'
    CategoryDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/Category'
    UpdateCategoryImageBody:
      type: object
      properties:
        id:
          type: string
        image:
          type: string
      required:
        - id
        - image
    CategoryImageUdate:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
      required:
        - results
    CategoryImageUdateResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/CategoryImageUdate'
    VehicleStatus:
      type: string
      enum:
        - Availlable
        - Sold
        - InStock
        - Deleted
        - Removed
    VehicleData:
      type: object
      properties:
        _id:
          type: string
        site:
          type: number
          format: float
        itemId:
          type: string
        price:
          type: number
          format: float
        make:
          type: string
        makeEn:
          type: string
        picture:
          type: array
          items:
            type: string
        mileage:
          type: number
          format: float
        model:
          type: string
        planA:
          type: number
          format: float
        planB:
          type: number
          format: float
        repairHistory:
          type: string
        specification:
          type: array
          items:
            type: string
        title:
          type: string
        offerPrice:
          type: string
        salePrice:
          type: number
          format: float
        status:
          $ref: '#/components/schemas/VehicleStatus'
        url:
          type: string
        inspectionMonth:
          type: number
          format: float
        inspectionYear:
          type: number
          format: float
        modelYear:
          type: number
          format: float
        pageNo:
          type: number
          format: float
        mfgData:
          type: string
        mfgYear:
          type: number
          format: float
        regYear:
          type: number
          format: float
        regMonth:
          type: number
          format: float
        chassisNo:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        m3:
          type: string
        doors:
          type: string
        seatCapacity:
          type: number
          format: float
        location:
          type: string
        fuel:
          type: string
        color:
          type: string
        wheelDrive:
          type: string
        bodyType:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        wheelbase:
          type: string
        vehicleWeight:
          type: string
        indoor:
          type: string
        JC08FuelEconomy:
          type: string
        WLTCFuelEconomy:
          type: string
        minimumTurningRadius:
          type: string
        numberOfSheetRows:
          type: string
        steering:
          type: string
        condition:
          type: string
        updatedAt:
          type: string
        deletedAt:
          type: string
        createdAt:
          type: string
        ___v:
          type: number
          format: float
        id:
          type: string
      required:
        - _id
        - site
        - itemId
        - price
        - make
        - makeEn
        - picture
        - mileage
        - model
        - planA
        - planB
        - repairHistory
        - specification
        - title
        - offerPrice
        - salePrice
        - status
        - url
        - inspectionMonth
        - inspectionYear
        - modelYear
        - pageNo
        - mfgData
        - mfgYear
        - regYear
        - regMonth
        - chassisNo
        - width
        - height
        - length
        - m3
        - doors
        - seatCapacity
        - location
        - fuel
        - color
        - wheelDrive
        - bodyType
        - engineType
        - transmission
        - wheelbase
        - vehicleWeight
        - indoor
        - JC08FuelEconomy
        - WLTCFuelEconomy
        - minimumTurningRadius
        - numberOfSheetRows
        - steering
        - condition
        - updatedAt
        - deletedAt
        - createdAt
        - ___v
        - id
    vehicleResponseData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/VehicleData'
      required:
        - results
    VehicleResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/vehicleResponseData'
    addVehicleResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/VehicleData'
      required:
        - results
    AddVehicleResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/addVehicleResponseData'
    OneVehicleParam:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    VehicleStatusParams:
      allOf:
        - $ref: '#/components/schemas/OneVehicleParam'
        - type: object
          properties:
            status:
              type: string
          required:
            - status
    VehicleModel:
      type: object
      properties:
        site:
          type: number
          format: float
        itemId:
          type: string
        price:
          type: number
          format: float
        make:
          type: string
        makeEn:
          type: string
        picture:
          type: array
          items:
            type: string
        mileage:
          type: number
          format: float
        model:
          type: string
        planA:
          type: number
          format: float
        planB:
          type: number
          format: float
        repairHistory:
          type: string
        specification:
          type: array
          items:
            type: string
        title:
          type: string
        offerPrice:
          type: string
        salePrice:
          type: number
          format: float
        status:
          $ref: '#/components/schemas/VehicleStatus'
        url:
          type: string
        inspectionMonth:
          type: number
          format: float
        inspectionYear:
          type: number
          format: float
        modelYear:
          type: number
          format: float
        pageNo:
          type: number
          format: float
        mfgData:
          type: string
        mfgYear:
          type: number
          format: float
        regYear:
          type: number
          format: float
        regMonth:
          type: number
          format: float
        chassisNo:
          type: string
        width:
          type: string
        height:
          type: string
        length:
          type: string
        m3:
          type: string
        doors:
          type: string
        seatCapacity:
          type: number
          format: float
        location:
          type: string
        fuel:
          type: string
        color:
          type: string
        wheelDrive:
          type: string
        bodyType:
          type: string
        engineType:
          type: string
        transmission:
          type: string
        wheelbase:
          type: string
        vehicleWeight:
          type: string
        indoor:
          type: string
        JC08FuelEconomy:
          type: string
        WLTCFuelEconomy:
          type: string
        minimumTurningRadius:
          type: string
        numberOfSheetRows:
          type: string
        steering:
          type: string
        condition:
          type: string
      required:
        - site
        - itemId
        - price
        - make
        - makeEn
        - picture
        - mileage
        - model
        - planA
        - planB
        - repairHistory
        - specification
        - title
        - offerPrice
        - salePrice
        - status
        - url
        - inspectionMonth
        - inspectionYear
        - modelYear
        - pageNo
        - mfgData
        - mfgYear
        - regYear
        - regMonth
        - chassisNo
        - width
        - height
        - length
        - m3
        - doors
        - seatCapacity
        - location
        - fuel
        - color
        - wheelDrive
        - bodyType
        - engineType
        - transmission
        - wheelbase
        - vehicleWeight
        - indoor
        - JC08FuelEconomy
        - WLTCFuelEconomy
        - minimumTurningRadius
        - numberOfSheetRows
        - steering
        - condition
    AddVehicleRequest:
      $ref: '#/components/schemas/VehicleModel'
    VehicleDeleteViewModel:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/VehicleModel'
    YearRange:
      type: object
      properties:
        startYear:
          type: string
        endYear:
          type: string
      required:
        - startYear
        - endYear
    PriceRange:
      type: object
      properties:
        startPrice:
          type: string
        endPrice:
          type: string
      required:
        - startPrice
        - endPrice
    mileageRange:
      type: object
      properties:
        startMileage:
          type: string
        endMileage:
          type: string
      required:
        - startMileage
        - endMileage
    RangeList:
      type: object
      properties:
        years:
          $ref: '#/components/schemas/YearRange'
        prices:
          $ref: '#/components/schemas/PriceRange'
        mileage:
          $ref: '#/components/schemas/mileageRange'
    VehicleByRange:
      $ref: '#/components/schemas/RangeList'
    SelectedColor:
      type: object
      properties:
        _id:
          type: string
        color:
          type: string
      required:
        - _id
        - color
    SelectedSize:
      type: object
      properties:
        _id:
          type: string
        color:
          type: string
      required:
        - _id
        - color
    CartItem:
      type: object
      properties:
        _id:
          type: string
        product:
          type: string
        selectedColor:
          $ref: '#/components/schemas/SelectedColor'
        selectedSize:
          $ref: '#/components/schemas/SelectedSize'
        totalProductQuantity:
          type: number
          format: float
        totalProductPrice:
          type: number
          format: float
      required:
        - _id
        - product
        - selectedColor
        - selectedSize
        - totalProductQuantity
        - totalProductPrice
    Cart:
      type: object
      properties:
        email:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        totalQuantity:
          type: number
          format: float
        totalPrice:
          type: number
          format: float
      required:
        - email
        - items
        - totalQuantity
        - totalPrice
    CartsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
      required:
        - results
    CartsGetResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/CartsResponse'
    CartItemInput:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: number
          format: float
        selectedColor:
          type: string
        selectedSize:
          type: string
      required:
        - productId
        - quantity
        - selectedColor
        - selectedSize
    AddCartBody:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/CartItemInput'
      required:
        - results
    CartPostResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/Cart'
    UpdateCartBody:
      type: object
      properties:
        productId:
          type: string
        selectedColor:
          type: string
        selectedSize:
          type: string
      required:
        - productId
        - selectedColor
        - selectedSize
    CartUdateResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Cart'
      required:
        - results
    CartPutResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/CartUdateResponse'
    CartDeleteResponse:
      $ref: '#/components/schemas/commonPostResponse'
    Discount:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        discount:
          type: number
          format: float
        available:
          type: number
          format: float
      required:
        - _id
        - code
        - discount
        - available
    DiscountsResponse:
      type: object
      properties:
        codes:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
      required:
        - codes
    DiscountsGetResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/DiscountsResponse'
    DiscountResponse:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/Discount'
      required:
        - results
    DiscountGetResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/DiscountResponse'
    DiscountPostResponse:
      allOf:
        - $ref: '#/components/schemas/commonPostResponse'
        - $ref: '#/components/schemas/DiscountResponse'
    NewDiscount:
      type: object
      properties:
        codeLength:
          type: number
          format: float
        discountStart:
          type: number
          format: float
        discountEnd:
          type: number
          format: float
        availableStart:
          type: number
          format: float
        availableEnd:
          type: number
          format: float
      required:
        - codeLength
        - discountStart
        - discountEnd
        - availableStart
        - availableEnd
    GenerateNewDiscount:
      $ref: '#/components/schemas/NewDiscount'
    DiscountCancelResponse:
      $ref: '#/components/schemas/commonPostResponse'
    DiscountDeleteResponse:
      $ref: '#/components/schemas/commonPostResponse'
    Favorite:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
        products:
          type: array
          items:
            type: string
      required:
        - _id
        - user
        - products
    favoriteResponseData:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/Favorite'
      required:
        - results
    FavoriteResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/favoriteResponseData'
    IReview:
      type: object
      properties:
        _id:
          type: string
        product:
          type: string
        user:
          type: string
        review:
          type: string
        rating:
          type: number
          format: float
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - _id
        - product
        - user
        - review
        - rating
        - createdAt
        - updatedAt
    reviewResponseData:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IReview'
      required:
        - results
    ReviewResponse:
      allOf:
        - $ref: '#/components/schemas/commonGetResponse'
        - $ref: '#/components/schemas/reviewResponseData'
    headerParams:
      type: object
      properties:
        accept-language:
          type: string
          description: |-
            Accept-Language
            Example : en_US, jp_JP
    OneReviewParam:
      type: object
      properties:
        productId:
          type: string
        reviewId:
          type: string
      required:
        - productId
        - reviewId
    OneReviewParams:
      allOf:
        - $ref: '#/components/schemas/headerParams'
        - $ref: '#/components/schemas/OneReviewParam'
  securitySchemes:
    SecurityHeader:
      type: apiKey
      in: header
      name: Authorization
      description: Authorization  (http, Bearer)
security:
  - SecurityHeader: []
servers:
  - url: http://localhost:{port}/{basePath}
    description: The development API server
    variables:
      port:
        default: '8000'
      basePath:
        default: api/v1
  - url: https://api.jacokin.com:{port}/{basePath}
    description: The production API server
    variables:
      port:
        default: '8000'
      basePath:
        default: api/v1
